[MYSQL COMMAND]
select * from 테이블명 where 컬럼명 like "a%"; 테이블명 안에 있는 컬럼이 a로 시작하는 데이터를 표시한다.
select * from 테이블명 where 컬럼명 like "%a"; 테이블명 안에 있는 컬럼이 a로 끝나는 데이터를 표시한다.
select * from 테이블명 where 컬럼명 like "a%" and not 컬럼명2 like "서%"; 테이블명 안에 있는 컬럼이 a로 시작하고 컬럼2가 서로 시작하지 않는 데이터를 표시한다.
select * from 테이블명 where 컬럼명 like "___"; 테이블명 안에 있는 컬럼이 3글자인 데이터를 표시한다. (언더바 세 개 ___)
select abs(-10); 절대값 도출, 결과값은 10
select ceil(10.1); 올림 처리, 결과값은 11
select floor(10.9); 내림 처리, 결과값은 10
select round(10.6); 반올림 처리, 결과값은 11
select concat("서울특별시","강동구","OO동"); 문자 결합, 출력값은 서울특별시강동구OO동
select insert("aaaaa",2,2,"bbb"); (타겟문자열, 삽입할 위치, 제거할 문자 개수, 삽입할 문자열), 결과값은 abbbaa
select replace("홍길동입니다", "홍길동", "라이언"); ("타겟문자열", "대상문자", "교체할 문자"), 결과값은 라이언입니다
select instr("aabbccdd", "cc"); ("타겟문자열","찾을문자열") 위치값 반환, 존재하지 않으면 0 반환, 결과값은 5
select left("abcdefg", 4); ("문자열",가져올 문자의 개수), 결과값은 abcd
select right("abcdefg", 4); ("문자열",가져올 문자의 개수), 결과값은 defg
select mid("abcdefg", 2, 4); ("기준문자열", 시작점, 가져올 문자의 개수), 결과값은 bcde
select substring("abcdefg", 2, 4); ("기준문자열", 시작점, 가져올 문자의 개수), 결과값은 bcde
create table practice01.key(`idx` int(4) NOT NULL AUTO_INCREMENT, `id` varchar(12), `pw` varchar(18), `signupdate` timestamp(6), PRIMARY KEY(`idx`)); 테이블 이름이 pri인 테이블 생성, 숫자 네자리까지 허용, NULL값 허용 안됨, 숫자 자동증가, idx를 프라이머리 키로 지정, signupdate 필드에 시간이 자동으로 찍히는 타임스탬프 기능 추가
insert into 테이블명(컬럼명1, 컬럼명2) values(필드값1, 필드값2);
update 테이블명 set 컬럼명 = 변경할값 where 컬럼명 is null / not null;

CREATE TABLE MISSION_01(`idx` int(4) AUTO_INCREMENT PRIMARY KEY, `pname` varchar(20) NOT NULL, `amount` int(8) DEFAULT 0, `indate` timestamp(6));
insert into MISSION_01(pname, amount) values("콜라", 5);
insert into MISSION_01(pname, amount) values("스낵", 21);
insert into MISSION_01(pname, amount) values("컵라면", 33);
insert into MISSION_01(pname) values("커피");
insert into MISSION_01(pname, amount) values("핫바", 3);

ALTER TABLE 테이블명 CHANGE 기존컬럼명 변경할컬럼명 컬럼타입; 컬럼이름변경
ALTER TABLE 테이블명 MODIFY 순서변경할컬럼명 컬럼타입 AFTER 앞에오는컬럼명; 컬럼순서변경
ALTER TABLE 테이블명 ALTER COLUMN 기존컬럼명 SET DEFAULT 디폴트값; 디폴트값 변경
ALTER TABLE 테이블명 MODIFY 기존컬럼명 변경할컬럼타입;
ALTER TABLE 테이블명 ADD 추가할컬럼명 컬럼타입 DEFAULT 디폴드값; 컬럼 추가
ALTER TABLE 테이블명 ADD COLUMN 추가할컬럼명 컬럼타입 DEFAULT 디폴드값 컬럼위치; 컬럼 추가
ALTER TABLE 테이블명 DROP COLUMN 컬럼명; 컬럼 삭제

[테이블의 제약조건]
컬럼에 저장될 데이터의 조건을 설정하는 것을 제약조건이라고 합니다. 제약 조건을 설정하면 조건에 위배되는 데이터는 저장할 수 없으므로 무결성을 보장할 수 있습니다.
예제) create table `aaa`(`id` varchar(12), `pw` varchar(18)); id 컬럼은 12글자를 넘을 수 없고, pw는 18글자를 넘을 수 없음
데이터베이스 안에 테이블들은 여러 개발자가 사용할 수 있으므로 테이블을 생성할 때 제약 조건을 설정하는 것은 중요합니다.

[AUTO_INCREMENT 명령어]
테이블 생성 시 사용되는 명령어, 해당 필드의 컬럼 숫자가 자동으로 증가하게 해주는 옵션

[PRIMARY KEY 명령어]
테이블 생성 시 사용되는 명령어, 해당 컬럼의 무결성을 설정함에 있어서 가장 중요한 요소, 컬럼에 중복된 데이터를 저장할 수 없으며, Null값도 허용하지 않음, 주로 각 row를 구분하기 위한 유일한 값을 colomn에 저장하며, 이를 기본키라고도 한다.

[NOT NULL 명령어]
테이블 생성 시 사용되는 명령어, 컬럼에 NULL값을 주지 않은 상태를 지정할 수 없고 반드시 쿼리문을 통해 값을 지정해야 한다는 옵션

[UNIQUE 명령어]
테이블 생성 시 사용되는 명령어, 컬럼에 중복되지 않는 값을 저장하고자 할 때 사용하는 옵션, PRIMARY KEY와 다르게 NULL값을 허용

[DEFAULT 명령어]
테이블 생성 시 사용되는 명령어, 만약옵션에 NULL값을 허용한다면 default 옵션을 사용하지 않은 경우 그대로 NULL값이 저장되는데, default 옵션을 사용하면 NULL값 대신 default로 설정한 값이 입력됨